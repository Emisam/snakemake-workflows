localrules: all

SAMPLES, = glob_wildcards("fasta/{sample}.fna")
REFERENCES, = glob_wildcards("reference/{reference}.fna")


rule all:
    input:
        "snp_fasta/all.fasta"
    threads: 60

#raxmlHPC-PTHREADS-SSE3 -T 30 -f d -p 12345 -m GTRGAMMA -s all.fasta -n Fran --no-bfgs
#raxmlHPC-PTHREADS-SSE3 -T 40 -f e -m GTRGAMMA -s all.fasta -t RAxML_bestTree.Fran -n PARAMS --no-bfgs

rule onlysnp_fasta:
    input:
        "merged_fasta/all.fasta"
    output:
        "snp_fasta/all.fasta"
    threads: 1
    shell:
        "snp-sites -cb -o {output} {input}"

rule merge_fasta:
    input:
        expand('clean_fasta/{sample}.fasta', sample=SAMPLES)
    output:
        "merged_fasta/all.fasta"
    threads: 1
    shell:
        "cat {input} > {output}"

rule fix_fasta:
    input:
        "aligned_fasta/{sample}.fasta"
    output:
        "clean_fasta/{sample}.fasta"
    threads: 1
    shell:
        "python fastafix.py {input} {output} {wildcards.sample}"

rule fix_coordinate:
    input:
        "aligned_xfma/{sample}.xfma"
    output:
        "aligned_fasta/{sample}.fasta"
    log:
        "logs/aligned_fasta/{sample}.log"
    threads: 1
    shell:
        "x2fa.py {input} reference/FSC200.fna 20 {output}  >  {log}"

rule align_genome:
    input:
        expand('reference/{reference}.fna', reference=REFERENCES),
        "fasta/{sample}.fna"
    output:
        "aligned_xfma/{sample}.xfma"
    log:
        "logs/aligned_xfma/{sample}.log"
    threads: 1
    shell:
        "progressiveMauve --output={output} {input}  > {log}"
